include:
  - remote: 'https://git.spooner.io/ci-templates/gitlab-anybadge-creator/-/raw/main/anybadges.yml'
  - remote: 'https://git.spooner.io/ci-templates/composer-packages/-/raw/main/composer-packages.yml'

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - vendor/

stages:
  - test
  - packages
  - badges
  - release


"TypoScript Lint":
  stage: test
  image: composer:2.0.7
  variables:
    GIT_STRATEGY: "clone"
  before_script:
    - composer global require helmich/typo3-typoscript-lint --update-with-all-dependencies
  script:
    - /tmp/vendor/bin/typoscript-lint -c .Build/typoscript-lint.yml --fail-on-warnings

"PHP CS Fixer":
  stage: test
  image: ekreative/php-cs-fixer:2
  rules:
    - changes:
        - Classes/*.php
        - Tests/*.php
  script:
    - php-cs-fixer fix --dry-run --config=.Build/.php_cs --diff

"PHP Static Analyzer":
  stage: test
  image: composer:2.0.7
  rules:
    - changes:
        - Classes/*.php
        - Tests/*.php
  before_script:
    - composer global require phpstan/phpstan
  script:
    - composer install --ignore-platform-reqs
    - /tmp/vendor/bin/phpstan analyse -l 4 -c .Build/phpstan.neon

"PHP Rector Analyzer":
  stage: test
  image: composer:2.0.7
  before_script:
    - composer install --ignore-platform-reqs
    - mkdir build
    - apk update && apk add icu-dev
    - docker-php-ext-install intl
  script:
    - vendor/bin/rector process --config .Build/rector.php --dry-run
    - vendor/bin/rector process --config .Build/rector.php --dry-run --output-format=checkstyle > build/rector.xml
  allow_failure: true
  artifacts:
    reports:
      junit: build/rector.xml

"Create Badge":
  stage: badges
  script:
    - latest_version=$(git describe --abbrev=0)
    - anybadge -l "Latest Version" -v $latest_version -f latestVersion.svg -c blue

"Upload to TER":
  stage: release
  image: composer:2.0.7
  only:
    - tags
  before_script:
    - composer global require typo3/tailor
  script:
    - >
      if [ -n "$CI_COMMIT_TAG" ] && [ -n "$TYPO3_API_TOKEN" ] && [ -n "$TYPO3_EXTENSION_KEY" ]; then
        echo -e "Preparing upload of release ${CI_COMMIT_TAG} to TER\n"
        # Cleanup before we upload
        git reset --hard HEAD && git clean -fx
        # Upload
        TAG_MESSAGE=`git tag -n10 -l $CI_COMMIT_TAG | sed 's/^[0-9.]*[ ]*//g'`
        echo "Uploading release ${CI_COMMIT_TAG} to TER"
        /tmp/vendor/bin/tailor ter:publish --comment "$TAG_MESSAGE" "$CI_COMMIT_TAG" "$TYPO3_EXTENSION_KEY"
      fi;
